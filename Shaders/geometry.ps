Texture2D albedoTexture : register(t0);
SamplerState albedoSampler : register(s0);

cbuffer MaterialBuffer : register(b0)
{
    float3 albedoColor;
    float roughness;
    bool useAlbedoTexture;
    
    float3 padding;
};

struct PixelInputType
{
	float4 position : SV_POSITION;
	float2 uv : TEXCOORD0;
	float3 normal : NORMAL;
};

struct PixelOutputType
{
    float4 albedo : SV_Target0;
    float4 normal : SV_Target1;
};

PixelOutputType GeometryPixelShader(PixelInputType input) : SV_TARGET
{
    PixelOutputType output;
    
    float3 texAlbedo = albedoTexture.Sample(albedoSampler, input.uv).rgb;
    float3 albedo = lerp(albedoColor, texAlbedo, useAlbedoTexture ? 1.0 : 0.0);
	output.albedo = float4(albedo, 1.0);

    float3 normal = normalize(input.normal);
    normal = normal * 0.5f + 0.5f;
    output.normal = float4(normal, roughness);

    return output;
}